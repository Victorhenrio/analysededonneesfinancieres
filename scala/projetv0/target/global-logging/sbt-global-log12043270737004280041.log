[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Actif\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Actif\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.4 (Oracle Corporation Java 12.0.1)
[debug]       Load.loadUnit: plugins took 145.3795ms
[debug]       Load.loadUnit: defsScala took 0.3203ms
[debug] [Loading] Scanning directory C:\Users\Actif\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Actif\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 30.1377 ms
[debug]           Load.resolveProject(global-plugins) took 60.8852ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Actif\.sbt\1.0\plugins, plugins: List(<none>))) took 124.8572ms
[debug] [Loading] Done in C:\Users\Actif\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 157.8354ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3092ms
[debug]     Load.loadUnit(file:/C:/Users/Actif/.sbt/1.0/plugins/, ...) took 314.7528ms
[debug]   Load.apply: load took 529.8308ms
[debug]   Load.apply: resolveProjects took 7.3535ms
[debug]   Load.apply: finalTransforms took 86.2861ms
[debug]   Load.apply: config.delegates took 10.4951ms
[debug]   Load.apply: Def.make(settings)... took 1069.3348ms
[debug]   Load.apply: structureIndex took 120.1612ms
[debug]   Load.apply: mkStreams took 2.0327ms
[info] loading global plugins from C:\Users\Actif\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3537.6863ms
[debug]           Load.loadUnit: plugins took 25.4086ms
[debug]           Load.loadUnit: defsScala took 0.0057ms
[debug] [Loading] Scanning directory C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0\project
[debug]             Load.loadUnit: mkEval took 7.9563ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.6932 ms
[info] loading settings for project projetv0-build from idea.sbt ...
[debug]               Load.resolveProject(projetv0-build) took 29.2006ms
[debug]             Load.loadTransitive: finalizeProject(Project(id projetv0-build, base: C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0\project, plugins: List(<none>))) took 32.7548ms
[debug] [Loading] Done in C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0\project, returning: (projetv0-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2694.8572ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.1759ms
[debug]         Load.loadUnit(file:/C:/Users/Actif/Documents/analysededonneesfinancieres/websocket_scala-akka/projetv0/project/, ...) took 2728.7995ms
[debug]       Load.apply: load took 2730.8931ms
[debug]       Load.apply: resolveProjects took 0.1232ms
[debug]       Load.apply: finalTransforms took 14.5617ms
[debug]       Load.apply: config.delegates took 0.5212ms
[debug]       Load.apply: Def.make(settings)... took 106.2725ms
[debug]       Load.apply: structureIndex took 43.4402ms
[debug]       Load.apply: mkStreams took 0.0042ms
[info] loading project definition from C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 4635.0284ms
[debug]     Load.loadUnit: defsScala took 0.0064ms
[debug] [Loading] Scanning directory C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0
[debug]       Load.loadUnit: mkEval took 0.2997ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.5581 ms
[info] loading settings for project projetv0 from build.sbt ...
[debug]         Load.resolveProject(projetv0) took 44.9544ms
[debug]       Load.loadTransitive: finalizeProject(Project(id projetv0, base: C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0, plugins: List(<none>))) took 48.9033ms
[debug] [Loading] Done in C:\Users\Actif\Documents\analysededonneesfinancieres\websocket_scala-akka\projetv0, returning: (projetv0)
[debug]     Load.loadUnit: loadedProjectsRaw took 1883.9284ms
[debug]     Load.loadUnit: cleanEvalClasses took 29.9176ms
[debug]   Load.loadUnit(file:/C:/Users/Actif/Documents/analysededonneesfinancieres/websocket_scala-akka/projetv0/, ...) took 6550.1982ms
[debug] Load.apply: load took 6552.5048ms
[debug] Load.apply: resolveProjects took 0.1796ms
[debug] Load.apply: finalTransforms took 27.0619ms
[debug] Load.apply: config.delegates took 0.3724ms
[debug] Load.apply: Def.make(settings)... took 91.9296ms
[debug] Load.apply: structureIndex took 33.8086ms
[debug] Load.apply: mkStreams took 0.0033ms
[info] set current project to projetv0 (in build file:/C:/Users/Actif/Documents/analysededonneesfinancieres/websocket_scala-akka/projetv0/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 53819 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 53819, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to projetv0 (in build file:/C:/Users/Actif/Documents/analysededonneesfinancieres/websocket_scala-akka/projetv0/)
[debug] > Exec(idea-shell, None, None)
